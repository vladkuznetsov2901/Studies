format binary as "bin"
use32

section .data
    mass db 10, 24, 76, 111, 347, 281, 24, 70, 124, 97
    counter dd 0

section .text
global _start

_start:
    mov ecx, 10         ; устанавливаем счётчик элементов массива
    mov esi, mass       ; устанавливаем указатель на начало массива
    mov edx, 0          ; обнуляем регистр edx, где будем хранить сумму

check_loop:
    mov bl, [esi]       ; загружаем текущее число из массива в регистр bl
    mov eax, 0x00 ; устанавливаем битовую маску для проверки разрядов
    and eax, ebx        ; выполняем логическое И между маской и текущим числом
                        ; результат будет содержать только разряды, кратные 3
    test eax, eax       ; проверяем, были ли найдены разряды, кратные 3
    jz next_element     ; если нет, переходим к следующему элементу массива
    add dword [counter], 1 ; иначе увеличиваем счётчик на 1

next_element:
    add esi, 1          ; переходим к следующему элементу массива
    dec ecx             ; уменьшаем счётчик элементов на 1
    jnz check_loop      ; если все элементы не просмотрены, продолжаем цикл

    ; выводим результат
    mov eax, 1          ; устанавливаем номер системного вызова для вывода
    mov ebx, 1          ; устанавливаем номер потока вывода (stdout)
    mov ecx, [counter]  ; загружаем значение счётчика в ecx
    mov edx, 4          ; устанавливаем количество байт для вывода
    int 0x80            ; вызываем системный вызов для вывода значения

    ; завершаем программу
    mov eax, 1          ; устанавливаем номер системного вызова для выхода
    xor ebx, ebx        ; устанавливаем код завершения в 0
    int 0x80            ; вызываем системный вызов для выхода


